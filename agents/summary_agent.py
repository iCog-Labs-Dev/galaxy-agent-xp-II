import google.generativeai as genai
from dotenv import load_dotenv
import os

load_dotenv()
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
if not GEMINI_API_KEY:
    raise ValueError("GEMINI_API_KEY not set in .env file")

genai.configure(api_key=GEMINI_API_KEY)

model = genai.GenerativeModel("gemini-1.5-flash")


def summarize_tool_suggestions(tools: list, query: str) -> str:
    tool_descriptions = "\n\n".join(
        f"{i+1}. {tool['name']} (Category: {tool['category']})\n{tool['description'] or 'No description provided.'}"
        for i, tool in enumerate(tools)
    )

    prompt = f"""
You are a helpful AI assistant for Galaxy bioinformatics tools.

A user asked: "{query}"

start with "Ranked suggested tools" make it bold and clear:
the tools should be presented in a numbered list,
when describing tool be confident and concise as the data i am feeding you is generated by the E5 model.
their order should be based on the score provided
{tool_descriptions}

Please generate a clear, numbered, concise, and friendly natural language summary recommending these tools to the user. Briefly explain what each tool is suitable for.'
"""

    response = model.generate_content(prompt)
    return response.text.strip()


def summarize_workflow_suggestions(workflows: list, query: str) -> str:
    workflow_descriptions = "\n\n".join(
        f"{i+1}. {wf['name']} (Category: {wf['category']}, Score: {wf['score']:.2f})\n{wf['readme_excerpt'] or 'No details provided.'}"
        for i, wf in enumerate(workflows)
    )

    prompt = f"""
You are a helpful AI assistant for Galaxy workflows.

A user asked: "{query}"

start with "Ranked Workflows in Galaxy" make it bold and clear:
the workflows should be presented in a numbered list with the following details;
when describing workflow be confident as the data i am feeding you is generated by the E5 model.
their order should be based on the score provided

{workflow_descriptions}

Please write a clear, friendly summary presenting these workflows in numbered order. Briefly explain what each workflow does based on its excerpt.'
"""

    response = model.generate_content(prompt)
    return response.text.strip()
